---
import '@/styles/globals.css'
import Layout from '../layouts/Layout.astro';
import { Button } from "@/components/ui/button"
import { MoonIcon, SunIcon } from "lucide-react"
import Hero from '@/components/Hero';
import Experience from '@/components/Experience';
import PortfolioFeed from '@/components/PortfolioFeed';
import Education from '@/components/Education'; // Import the new Education component
import Footer from '@/components/Footer';
import { config } from '../data/config';

---

<Layout title={config.siteTitle}>
  <head>
    <meta name="description" content={config.description} />
    <meta name="keywords" content={config.keywords} />
    <link rel="icon" href={config.favicon} />
    <meta property="og:title" content={config.siteTitle} />
    <meta property="og:description" content={config.description} />
    <meta property="og:image" content="/path/to/image.jpg" />
    <meta property="og:url" content="https://yourwebsite.com" />
    <meta name="twitter:card" content="summary_large_image" />
    {/* <meta name="twitter:site" content={config.social.twitter} /> */}
    <meta name="twitter:title" content={config.siteTitle} />
    <meta name="twitter:description" content={config.description} />
    <meta name="twitter:image" content="/path/to/image.jpg" />
  </head>
  <main class="min-h-screen bg-background">
    <div class="fixed top-4 right-4 z-50">
      <Button variant="outline" size="icon" className="rounded-full" id="theme-toggle">
        <SunIcon className="h-[2.2rem] w-[2.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
        <MoonIcon className="absolute h-[2.2rem] w-[2.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
        <span class="sr-only">Toggle theme</span>
      </Button>
    </div>
    <Hero client:load />
    <Experience client:visible />
    <PortfolioFeed client:visible />
    <Education client:visible /> {/* Add the Education component here */}
    <Footer client:visible />
  </main>
</Layout>

<script>
  const themeToggle = document.getElementById('theme-toggle');
  
  // Check for saved theme preference or default to dark theme
  if (typeof localStorage !== 'undefined') {
    if (!localStorage.getItem('theme')) {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    } else if (localStorage.getItem('theme') === 'dark') {
      document.documentElement.classList.add('dark');
    }
  }

  // Theme toggle functionality
  themeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });
</script>

</file>
</boltArtifact>
